{"ast":null,"code":"var _jsxFileName = \"/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/AccountComponent.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"./context/AuthProvider\";\nimport \"./styles/Account.css\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport FeedPost from \"./FeedPost\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountComponent = params => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const {\n    auth,\n    setAuth\n  } = useContext(AuthContext);\n  const [userData, setUserData] = useState({});\n  const [dataLoadStatus, setLoadStatus] = useState(\"pending\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(params.api_url + \"users_detail/?username=\" + (username ? username : auth === null || auth === void 0 ? void 0 : auth.user[\"username\"]));\n        const responce = await axios.get(params.api_url + \"users_detail/?username=\" + (username ? username : auth === null || auth === void 0 ? void 0 : auth.user[\"username\"]));\n        console.log(responce.data);\n        setUserData(responce.data);\n        setLoadStatus(\"success\");\n        return responce.data;\n      } catch (e) {\n        setLoadStatus(\"fail\");\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, [username]);\n  if (username) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: dataLoadStatus == \"success\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile-info-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-username\",\n            children: [\"  \", username, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), userData[\"user_extra_data\"][\"profile_pic\"] ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-bio-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"user-profile-image\",\n              src: params.images_path + userData[\"user_extra_data\"][\"profile_pic\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-bio\",\n              children: userData[\"user_extra_data\"][\"bio\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userposts-text\",\n            children: \" \\u041F\\u043E\\u0441\\u0442\\u044B \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-posts-box\",\n          children: userData[\"posts\"].map(item => /*#__PURE__*/_jsxDEV(FeedPost, {\n            item: item\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this) // здесь они не будут перерисовываться но дублироваться могут как вариант решил использовать рандомные идентификаторы\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : dataLoadStatus == \"pending\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Loading user data... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 60\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Failed to load user data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this)\n    }, void 0, false);\n  }\n  if ((auth === null || auth === void 0 ? void 0 : auth.user[\"username\"]) == username) {\n    navigate(\"/account\");\n  }\n  if (auth !== null && auth !== void 0 && auth.user[\"username\"]) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"user-username\",\n        children: auth.user[\"username\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"user-email\",\n        children: auth.user[\"email\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), dataLoadStatus == \"success\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts-box\",\n        children: userData[\"posts\"].map(item => /*#__PURE__*/_jsxDEV(FeedPost, {\n          item: item\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }, this) // здесь они не будут перерисовываться но дублироваться могут как вариант решил использовать рандомные идентификаторы\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this) : dataLoadStatus == \"pending\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Loading user posts... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 61\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Failed to load user posts \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(AccountComponent, \"hbyz9V89E64DkSsUOEQKjA6lPkQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AccountComponent;\nexport default AccountComponent;\nvar _c;\n$RefreshReg$(_c, \"AccountComponent\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","useParams","axios","useNavigate","FeedPost","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","AccountComponent","params","_s","username","auth","setAuth","userData","setUserData","dataLoadStatus","setLoadStatus","navigate","fetchData","console","log","api_url","user","responce","get","data","e","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","images_path","map","item","_c","$RefreshReg$"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/AccountComponent.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"./context/AuthProvider\";\nimport \"./styles/Account.css\"\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport FeedPost from \"./FeedPost\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AccountComponent = (params) => {\n    const { username } = useParams();\n    const {auth, setAuth} = useContext(AuthContext);\n    const [userData, setUserData] = useState({});\n    const [dataLoadStatus, setLoadStatus] = useState(\"pending\");\n    const navigate = useNavigate();\n\n    useEffect(\n        () => {\n            const fetchData = async () => {\n                try\n                {\n                    console.log(params.api_url + \"users_detail/?username=\" + (username ? username : auth?.user[\"username\"]))\n                    const responce = await axios.get(params.api_url + \"users_detail/?username=\" + (username ? username : auth?.user[\"username\"]));\n                    console.log(responce.data);\n                    setUserData(responce.data);\n                    setLoadStatus(\"success\");\n                    return responce.data;\n                }\n                catch (e)\n                {\n                    setLoadStatus(\"fail\");\n                    console.log(e);\n                }\n\n            }\n            fetchData();\n        }\n        , [username]\n    )    \n    if (username)\n    {\n        return (\n            <>\n            {\n                dataLoadStatus == \"success\" ?\n                (\n                    <>\n                    <div className=\"user-profile-info-box\">\n                        <div className=\"user-username\">  {username} </div>\n                        {\n                            userData[\"user_extra_data\"][\"profile_pic\"] ?\n                            (\n                                <div className=\"image-bio-box\">\n                                    <img className=\"user-profile-image\" src={ params.images_path + userData[\"user_extra_data\"][\"profile_pic\"] }></img>\n                                    <div className=\"user-bio\">{userData[\"user_extra_data\"][\"bio\"]}</div>\n                                </div>\n                            )\n                        : null\n                        }\n                        <div className=\"userposts-text\"> Посты пользователя </div>\n                    </div>\n                    <div className=\"user-posts-box\">\n                        {\n                            userData[\"posts\"].map((item) => (\n                                <FeedPost item={item} key={uuidv4()}></FeedPost> // здесь они не будут перерисовываться но дублироваться могут как вариант решил использовать рандомные идентификаторы\n                            ))\n                        }\n                    </div>\n                    </>\n                        ) : dataLoadStatus == \"pending\" ? (<div> Loading user data... </div>) :\n                         (<div> Failed to load user data </div>)\n            }\n            </>\n        )\n    }\n    if (auth?.user[\"username\"] == username)\n    {\n        navigate(\"/account\");\n    }\n    if (auth?.user[\"username\"])\n        {\n            return (\n                <>\n                    <h1 className=\"user-username\" >{auth.user[\"username\"]}</h1>\n                    <h2 className= \"user-email\">{auth.user[\"email\"]}</h2>\n                    {\n                        dataLoadStatus == \"success\" ?\n                        (\n                        <div className=\"user-posts-box\">\n                            {\n                                userData[\"posts\"].map((item) => (\n                                    <FeedPost item={item} key={uuidv4()}></FeedPost> // здесь они не будут перерисовываться но дублироваться могут как вариант решил использовать рандомные идентификаторы\n                                ))\n                            }\n                        </div>\n                         ) : dataLoadStatus == \"pending\" ? (<div> Loading user posts... </div>) :\n                         (<div> Failed to load user posts </div>)\n                    }\n                </>\n            );\n        }\n        else\n        {\n            return ( \n                <div> Пользователь не зарегистрирован</div>\n            );\n        }\n}\n \nexport default AccountComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}