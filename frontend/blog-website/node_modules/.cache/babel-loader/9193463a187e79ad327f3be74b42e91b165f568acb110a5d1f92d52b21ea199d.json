{"ast":null,"code":"var _jsxFileName = \"/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/CommentFormComponent.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { AuthContext } from \"./context/AuthProvider\";\nimport axios from \"axios\";\nimport AddImagesComponent from \"./AddImagesComponent\";\nimport \"./styles/CommentForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentFormComponent = params => {\n  _s();\n  const {\n    auth,\n    setAuth\n  } = useContext(AuthContext);\n  const [commentText, setCommentText] = useState(\"\");\n  const [commentImages, setCommentImages] = useState([]);\n  const [dataSendStatus, setDataSendStatus] = useState(null);\n  const [showedError, setShowedError] = useState(\"\");\n  const max_images = 3;\n  console.log(params.api_url);\n  function PostNewComment(event) {\n    const postData = async () => {\n      const formData = new FormData();\n      formData.append(\"author\", auth[\"user\"][\"id\"]);\n      formData.append(\"post\", params.post_id);\n      formData.append(\"content\", commentText);\n      commentImages.forEach((image, index) => {\n        formData.append(`image_${index}`, image.file);\n      });\n      try {\n        console.log(params.api_url + \"new_comment\");\n        const response = await axios.post(params.api_url + \"new_comment\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(\"Успешно:\", response.data);\n        setCommentImages([]);\n        setCommentText(\"\");\n      } catch (error) {\n        console.error(\"Ошибка при отправке:\", error);\n        setDataSendStatus(\"fail\");\n      }\n    };\n    event.preventDefault();\n    try {\n      if (auth !== null && auth !== void 0 && auth.user) {\n        console.log(\"посылаю запрос................................\");\n        postData();\n      }\n    } catch (e) {\n      console.log(e);\n      setDataSendStatus(\"fail\");\n    }\n    return 0;\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"comment-form-box\",\n    onSubmit: PostNewComment,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"comment-content\",\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      id: \"comment-box\",\n      onChange: e => {\n        setCommentText(e.target.value);\n      },\n      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043E \\u0434\\u0443\\u043C\\u0430\\u0435\\u0442\\u0435\",\n      value: commentText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddImagesComponent, {\n      max_images: max_images,\n      images: commentImages,\n      setImages: setCommentImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" \\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: showedError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentFormComponent, \"lbLzjGvivQfqt0dzleHRTzQYb5c=\");\n_c = CommentFormComponent;\nexport default CommentFormComponent;\nvar _c;\n$RefreshReg$(_c, \"CommentFormComponent\");","map":{"version":3,"names":["useContext","useState","AuthContext","axios","AddImagesComponent","jsxDEV","_jsxDEV","CommentFormComponent","params","_s","auth","setAuth","commentText","setCommentText","commentImages","setCommentImages","dataSendStatus","setDataSendStatus","showedError","setShowedError","max_images","console","log","api_url","PostNewComment","event","postData","formData","FormData","append","post_id","forEach","image","index","file","response","post","headers","data","error","preventDefault","user","e","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","target","value","placeholder","images","setImages","_c","$RefreshReg$"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/CommentFormComponent.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { AuthContext } from \"./context/AuthProvider\";\nimport axios from \"axios\";\nimport AddImagesComponent from \"./AddImagesComponent\";\nimport \"./styles/CommentForm.css\"\n\nconst CommentFormComponent = (params) => {\n\n    const {auth, setAuth} = useContext(AuthContext);\n    const [commentText, setCommentText] = useState(\"\");\n    const [commentImages, setCommentImages] = useState([]);\n    const [dataSendStatus, setDataSendStatus] = useState(null);\n    const [showedError, setShowedError] = useState(\"\");\n\n    const max_images = 3;\n\n    console.log(params.api_url);\n\n    function PostNewComment(event) {\n        const postData = async () => {\n            const formData = new FormData();\n\n            formData.append(\"author\", auth[\"user\"][\"id\"]);\n            formData.append(\"post\", params.post_id);\n            formData.append(\"content\", commentText);\n    \n            commentImages.forEach((image, index) => {\n                formData.append(`image_${index}`, image.file);\n            });\n    \n            try {\n                console.log(params.api_url + \"new_comment\")\n                const response = await axios.post(params.api_url + \"new_comment\", formData, {\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\"\n                    }\n                });\n    \n                console.log(\"Успешно:\", response.data);\n                setCommentImages([]);\n                setCommentText(\"\");\n\n            } catch (error) {\n                console.error(\"Ошибка при отправке:\", error);\n                setDataSendStatus(\"fail\")\n            }\n        }\n        event.preventDefault()\n        try\n        {\n            if (auth?.user)\n            {\n                console.log(\"посылаю запрос................................\")\n                postData()\n            }\n        }\n        catch (e)\n        {\n            console.log(e);\n            setDataSendStatus(\"fail\")\n        }\n        return 0;\n    }\n\n    return ( \n        <form className=\"comment-form-box\" onSubmit={PostNewComment}>\n            <label htmlFor=\"comment-content\">Оставьте комментарий</label>\n            <textarea type=\"text\" id=\"comment-box\" onChange={(e) => {setCommentText(e.target.value)}} placeholder=\"Напишите, что думаете\" value={commentText}></textarea>\n            <AddImagesComponent max_images={max_images} images={commentImages} setImages={setCommentImages}></AddImagesComponent>\n            <button> Ответить </button>\n            <label>{showedError}</label>\n        </form>\n     );\n}\n \nexport default CommentFormComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}