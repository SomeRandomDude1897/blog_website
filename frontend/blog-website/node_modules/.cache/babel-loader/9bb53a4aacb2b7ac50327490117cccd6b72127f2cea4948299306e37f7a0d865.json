{"ast":null,"code":"var _jsxFileName = \"/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/PostComponent.js\",\n  _s = $RefreshSig$();\nimport { AuthContext } from \"./context/AuthProvider\";\nimport { useContext } from \"react\";\nimport useLoad from \"./UseLoad\";\nimport { useParams } from \"react-router-dom\";\nimport \"./styles/PostDetail.css\";\nimport axios from \"axios\";\n\n// class post_serializer(serializers.ModelSerializer):\n//     class Meta:\n//         model = Post\n//         fields = [\"id\", \"author\", \"postname\", \"content\", \"created_at\"]\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostComponent = props => {\n  _s();\n  const {\n    auth,\n    setAuth\n  } = useContext(AuthContext);\n  const {\n    post_id\n  } = useParams();\n  const {\n    data,\n    setData\n  } = useParams();\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(url);\n      setData(response.data);\n      setReceivedData(\"Success\");\n    } catch (e) {\n      console.log(e);\n      setReceivedData(\"Fail\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"post-name\",\n      children: data[\"post_info\"][\"postname\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: data[\"post_info\"][\"content\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), \"console.log(data[\\\"images\\\"]);\"]\n  }, void 0, true);\n};\n_s(PostComponent, \"218ka1znFUGvWRI1bjm6x0mDq5I=\", false, function () {\n  return [useParams, useParams];\n});\n_c = PostComponent;\nexport default PostComponent;\nvar _c;\n$RefreshReg$(_c, \"PostComponent\");","map":{"version":3,"names":["AuthContext","useContext","useLoad","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PostComponent","props","_s","auth","setAuth","post_id","data","setData","fetchData","response","get","url","setReceivedData","e","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/PostComponent.js"],"sourcesContent":["import { AuthContext } from \"./context/AuthProvider\";\nimport { useContext } from \"react\";\nimport useLoad from \"./UseLoad\";\nimport { useParams } from \"react-router-dom\";\nimport \"./styles/PostDetail.css\"\nimport axios from \"axios\";\n\n\n// class post_serializer(serializers.ModelSerializer):\n//     class Meta:\n//         model = Post\n//         fields = [\"id\", \"author\", \"postname\", \"content\", \"created_at\"]\n\nconst PostComponent = (props) => {\n    const {auth, setAuth} = useContext(AuthContext);\n\n    const { post_id } = useParams();\n\n    const { data, setData } = useParams();\n\n    \n    const fetchData = async () => {\n        try{\n          const response = await axios.get(url)\n          setData(response.data);\n          setReceivedData(\"Success\");\n        }\n        catch (e)\n        {\n          console.log(e);\n          setReceivedData(\"Fail\");\n        }\n    }\n    \n    return ( \n        <>\n            <h1 className=\"post-name\">{data[\"post_info\"][\"postname\"]}</h1>\n            <div className=\"post-content\">{data[\"post_info\"][\"content\"]}</div>\n            console.log(data[\"images\"]);\n            {/* <div className=\"post-images-box\">\n                {\n                    data[\"images\"].map((item) => {\n                        <img className=\"post-image\" src={ props.images_path + item[\"file\"] }></img>\n                    })\n                }\n            </div> */}\n        </>\n     );\n}\n \nexport default PostComponent;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,yBAAyB;AAChC,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAGZ,UAAU,CAACD,WAAW,CAAC;EAE/C,MAAM;IAAEc;EAAQ,CAAC,GAAGX,SAAS,CAAC,CAAC;EAE/B,MAAM;IAAEY,IAAI;IAAEC;EAAQ,CAAC,GAAGb,SAAS,CAAC,CAAC;EAGrC,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAG;MACD,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACC,GAAG,CAAC;MACrCJ,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;MACtBM,eAAe,CAAC,SAAS,CAAC;IAC5B,CAAC,CACD,OAAOC,CAAC,EACR;MACEC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MACdD,eAAe,CAAC,MAAM,CAAC;IACzB;EACJ,CAAC;EAED,oBACIf,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA;MAAIoB,SAAS,EAAC,WAAW;MAAAD,QAAA,EAAEV,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9DxB,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAEV,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,kCAElE;EAAA,eAOF,CAAC;AAEX,CAAC;AAAAnB,EAAA,CAnCKF,aAAa;EAAA,QAGKN,SAAS,EAEHA,SAAS;AAAA;AAAA4B,EAAA,GALjCtB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}