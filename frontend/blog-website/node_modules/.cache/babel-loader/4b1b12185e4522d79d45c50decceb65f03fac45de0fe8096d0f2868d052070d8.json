{"ast":null,"code":"var _jsxFileName = \"/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/FeedContent.js\",\n  _s = $RefreshSig$();\nimport FeedPost from \"./FeedPost\";\nimport \"./styles/FeedContent.css\";\nimport { AuthContext } from \"./context/AuthProvider\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeedContent = props => {\n  _s();\n  const [postsFetchAmount, SetPostsFetchAmount] = useState(20);\n  const [hasScrolledToBottom, setHasScrolledToBottom] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      // Высота документа (вся страница)\n      const documentHeight = document.documentElement.scrollHeight;\n\n      // Текущая позиция скролла\n      const scrollPosition = window.scrollY + window.innerHeight;\n\n      // Если позиция скролла достигает или превышает высоту страницы\n      if (scrollPosition >= documentHeight) {\n        setHasScrolledToBottom(true); // Пользователь долистал до низа\n      } else {\n        setHasScrolledToBottom(false);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // Удаление слушателя при размонтировании компонента\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  let auth = useContext(AuthContext);\n  const [feedData, SetFeedData] = useState([]);\n  const [gotData, SetGotData] = useState(\"Pending\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let post_time_prefix = \"\";\n        if (feedData && feedData.length > 0) {\n          let last_posts = [];\n          feedData.slice(-postsFetchAmount).map(item => {\n            last_posts.push(item.id);\n          });\n          console.log(last_posts);\n          post_time_prefix = \"&last_posts=\" + last_posts;\n        }\n        console.log(props.api_url + \"posts/?amount=\" + postsFetchAmount + post_time_prefix);\n        const response = await axios.get(props.api_url + \"posts/?amount=\" + postsFetchAmount + post_time_prefix);\n        SetFeedData(feedData.concat(response.data));\n        SetGotData(\"Success\");\n      } catch (e) {\n        console.log(e);\n        SetGotData(\"Fail\");\n      }\n    };\n    setTimeout(fetchData, 1000);\n  }, [hasScrolledToBottom]);\n  if (gotData == \"Pending\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-block\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Loading data... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n  if (gotData == \"Fail\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-block\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Failed to fetch data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-box\",\n        children: feedData.map(item => /*#__PURE__*/_jsxDEV(FeedPost, {\n          item: item\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this) // здесь они не будут перерисовываться но дублироваться могут как вариант решил использовать рандомные идентификаторы\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(FeedContent, \"qIxMEm4A6HWxOymItPfN02S9mtE=\");\n_c = FeedContent;\nexport default FeedContent;\nvar _c;\n$RefreshReg$(_c, \"FeedContent\");","map":{"version":3,"names":["FeedPost","AuthContext","useContext","useEffect","useState","axios","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","FeedContent","props","_s","postsFetchAmount","SetPostsFetchAmount","hasScrolledToBottom","setHasScrolledToBottom","handleScroll","documentHeight","document","documentElement","scrollHeight","scrollPosition","window","scrollY","innerHeight","addEventListener","removeEventListener","auth","feedData","SetFeedData","gotData","SetGotData","fetchData","post_time_prefix","length","last_posts","slice","map","item","push","id","console","log","api_url","response","get","concat","data","e","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/FeedContent.js"],"sourcesContent":["import FeedPost from \"./FeedPost\";\nimport \"./styles/FeedContent.css\"\nimport { AuthContext } from \"./context/AuthProvider\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst FeedContent = (props) => {\n     \n    const [postsFetchAmount, SetPostsFetchAmount] = useState(20);\n\n    const [hasScrolledToBottom, setHasScrolledToBottom] = useState(false);\n\n    useEffect(() => {\n      const handleScroll = () => {\n        // Высота документа (вся страница)\n        const documentHeight = document.documentElement.scrollHeight;\n        \n        // Текущая позиция скролла\n        const scrollPosition = window.scrollY + window.innerHeight;\n  \n        // Если позиция скролла достигает или превышает высоту страницы\n        if (scrollPosition >= documentHeight) {\n          setHasScrolledToBottom(true); // Пользователь долистал до низа\n        } else {\n          setHasScrolledToBottom(false);\n        }\n      };\n  \n      window.addEventListener(\"scroll\", handleScroll);\n  \n      // Удаление слушателя при размонтировании компонента\n      return () => {\n        window.removeEventListener(\"scroll\", handleScroll);\n      };\n    }, []);\n\n    let auth = useContext(AuthContext);\n\n    const [feedData, SetFeedData] = useState([]);\n\n    const [gotData, SetGotData] = useState(\"Pending\");\n\n    \n    useEffect(\n        () => {\n            const fetchData = async () => {\n                try{\n                    let post_time_prefix = \"\";\n                    if (feedData && feedData.length > 0)\n                    {\n                        let last_posts = [];\n                        feedData.slice(-postsFetchAmount).map( (item) => {\n                            last_posts.push(item.id)\n                        })\n                        console.log(last_posts)\n                        post_time_prefix = \"&last_posts=\" + last_posts;\n                    }\n                    console.log(props.api_url + \"posts/?amount=\" + postsFetchAmount + post_time_prefix)\n                    const response = await axios.get(props.api_url + \"posts/?amount=\" + postsFetchAmount + post_time_prefix)\n\n                    SetFeedData(feedData.concat(response.data));\n                    SetGotData(\"Success\");\n                }\n                catch (e)\n                {\n                  console.log(e);\n                  SetGotData(\"Fail\");\n                }\n              };\n          \n            setTimeout(fetchData, 1000);\n            }\n    , [hasScrolledToBottom])\n\n    if (gotData == \"Pending\") {\n        return (\n            <>\n                <div className=\"loading-block\">\n                    <h2> Loading data... </h2>\n                </div>\n            </>\n        );\n    }\n\n    if (gotData == \"Fail\")\n    {\n        return (\n            <>\n                <div className=\"loading-block\">\n                    <h2> Failed to fetch data </h2>\n                </div>\n            </>\n        );\n    }\n\n\n    return ( \n        <>\n            <div className=\"feed-content\"> \n                <div className=\"feed-box\">\n                    {\n                        feedData.map((item) => (\n                            <FeedPost item={item} key={uuidv4()}></FeedPost> // здесь они не будут перерисовываться но дублироваться могут как вариант решил использовать рандомные идентификаторы\n                        ))\n                    }\n                </div>\n            </div>\n        </>\n     );\n}\n \nexport default FeedContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}