{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nconst PageTracker = () => {\n  _s();\n  const location = useLocation();\n  const previousLocation = useRef(location.pathname);\n  useEffect(() => {\n    if (previousLocation.current !== location.pathname) {\n      console.log(\"Переход на новую страницу:\", location.pathname);\n    }\n    previousLocation.current = location.pathname;\n  }, [location]);\n  return null;\n};\n_s(PageTracker, \"jAy2SxpCdDAv2DRtPkNeujgbnJY=\", false, function () {\n  return [useLocation];\n});\n_c = PageTracker;\nexport default PageTracker;\nvar _c;\n$RefreshReg$(_c, \"PageTracker\");","map":{"version":3,"names":["useEffect","useRef","useLocation","PageTracker","_s","location","previousLocation","pathname","current","console","log","_c","$RefreshReg$"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/PageTracker.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst PageTracker = () => {\n  const location = useLocation();\n  const previousLocation = useRef(location.pathname);\n\n  useEffect(() => {\n    if (previousLocation.current !== location.pathname) {\n      console.log(\"Переход на новую страницу:\", location.pathname);\n    }\n    previousLocation.current = location.pathname;\n  }, [location]);\n\n  return null; \n};\n\nexport default PageTracker;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAMI,gBAAgB,GAAGL,MAAM,CAACI,QAAQ,CAACE,QAAQ,CAAC;EAElDP,SAAS,CAAC,MAAM;IACd,IAAIM,gBAAgB,CAACE,OAAO,KAAKH,QAAQ,CAACE,QAAQ,EAAE;MAClDE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,QAAQ,CAACE,QAAQ,CAAC;IAC9D;IACAD,gBAAgB,CAACE,OAAO,GAAGH,QAAQ,CAACE,QAAQ;EAC9C,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI;AACb,CAAC;AAACD,EAAA,CAZID,WAAW;EAAA,QACED,WAAW;AAAA;AAAAS,EAAA,GADxBR,WAAW;AAcjB,eAAeA,WAAW;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}