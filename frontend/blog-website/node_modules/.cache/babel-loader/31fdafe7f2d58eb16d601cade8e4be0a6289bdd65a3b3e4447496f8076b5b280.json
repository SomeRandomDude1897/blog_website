{"ast":null,"code":"import{createContext,useEffect,useState}from\"react\";import{jwtDecode}from\"jwt-decode\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children,api_url}=_ref;const[auth,setAuth]=useState({});const[loadedData,setLoadedData]=useState(false);useEffect(()=>{const fetchData=async user_id=>{try{const responce=await axios.get(api_url+\"users_detail/?user_id=\"+user_id);setAuth({user:responce.data[\"user_info\"],user_data:responce.data[\"user_data\"]});setLoadedData(true);}catch(e){console.log(e);}};const token=localStorage.getItem(\"authToken\")||sessionStorage.getItem(\"authToken\");if(token){// Если токен найден, обновляем состояние аутентификации\nfetchData(jwtDecode(token)[\"user_id\"]);}else{setLoadedData(true);}},[]);if(loadedData){return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{auth,setAuth},children:children});}};export{AuthContext};","map":{"version":3,"names":["createContext","useEffect","useState","jwtDecode","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","api_url","auth","setAuth","loadedData","setLoadedData","fetchData","user_id","responce","get","user","data","user_data","e","console","log","token","localStorage","getItem","sessionStorage","Provider","value"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/context/AuthProvider.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children, api_url }) => {\n  const [auth, setAuth] = useState({});\n  const [loadedData, setLoadedData] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async (user_id) => {\n      try {\n        const responce = await axios.get(\n          api_url + \"users_detail/?user_id=\" + user_id\n        );\n        setAuth({\n          user: responce.data[\"user_info\"],\n          user_data: responce.data[\"user_data\"],\n        });\n        setLoadedData(true);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    const token =\n      localStorage.getItem(\"authToken\") || sessionStorage.getItem(\"authToken\");\n\n    if (token) {\n      // Если токен найден, обновляем состояние аутентификации\n      fetchData(jwtDecode(token)[\"user_id\"]);\n    } else {\n      setLoadedData(true);\n    }\n  }, []);\n  if (loadedData) {\n    return (\n      <AuthContext.Provider value={{ auth, setAuth }}>\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n};\n\nexport { AuthContext };\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,OAASC,SAAS,KAAQ,YAAY,CACtC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAA2B,IAA1B,CAAEC,QAAQ,CAAEC,OAAQ,CAAC,CAAAF,IAAA,CAChD,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CACpC,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAEnDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,SAAS,CAAG,KAAO,CAAAC,OAAO,EAAK,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAC9BR,OAAO,CAAG,wBAAwB,CAAGM,OACvC,CAAC,CACDJ,OAAO,CAAC,CACNO,IAAI,CAAEF,QAAQ,CAACG,IAAI,CAAC,WAAW,CAAC,CAChCC,SAAS,CAAEJ,QAAQ,CAACG,IAAI,CAAC,WAAW,CACtC,CAAC,CAAC,CACFN,aAAa,CAAC,IAAI,CAAC,CACrB,CAAE,MAAOQ,CAAC,CAAE,CACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAChB,CACF,CAAC,CACD,KAAM,CAAAG,KAAK,CACTC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAIC,cAAc,CAACD,OAAO,CAAC,WAAW,CAAC,CAE1E,GAAIF,KAAK,CAAE,CACT;AACAV,SAAS,CAACb,SAAS,CAACuB,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CACxC,CAAC,IAAM,CACLX,aAAa,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,CAAE,EAAE,CAAC,CACN,GAAID,UAAU,CAAE,CACd,mBACER,IAAA,CAACC,WAAW,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,IAAI,CAAEC,OAAQ,CAAE,CAAAH,QAAA,CAC5CA,QAAQ,CACW,CAAC,CAE3B,CACF,CAAC,CAED,OAASH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}