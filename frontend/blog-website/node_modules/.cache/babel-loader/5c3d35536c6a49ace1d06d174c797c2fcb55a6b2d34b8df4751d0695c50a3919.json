{"ast":null,"code":"var _jsxFileName = \"/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/FeedContent.js\",\n  _s = $RefreshSig$();\nimport useLoad from \"./UseLoad\";\nimport FeedPost from \"./FeedPost\";\nimport \"./styles/FeedContent.css\";\nimport { AuthContext } from \"./context/AuthProvider\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeedContent = props => {\n  _s();\n  function getPostTime() {\n    if (feed_data.length == 0) {\n      return \"\";\n    } else {\n      return \"&last_post_time=\" + feed_data[feed_data.length - 1].created_at;\n    }\n  }\n  const [lastPostTime, SetLastPostTime] = useState(null);\n  let auth = useContext(AuthContext);\n  console.log(auth === null || auth === void 0 ? void 0 : auth.username);\n  const [feedData, SetFeedData] = useState([]);\n  const [receivedData, SetReceivedData] = useState(false);\n  const [data, got_data] = useLoad(props.api_url + getPostTime());\n  SetFeedData(data);\n  SetReceivedData(got_data);\n  if (receivedData == \"Pending\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-block\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Loading data... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n  if (receivedData == \"Fail\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-block\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Failed to fetch data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-box\",\n        children: feed_data.map(item => /*#__PURE__*/_jsxDEV(FeedPost, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(FeedContent, \"fq892nTCRiHDPT2rWxvOW385teA=\", false, function () {\n  return [useLoad];\n});\n_c = FeedContent;\nexport default FeedContent;\nvar _c;\n$RefreshReg$(_c, \"FeedContent\");","map":{"version":3,"names":["useLoad","FeedPost","AuthContext","useContext","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FeedContent","props","_s","getPostTime","feed_data","length","created_at","lastPostTime","SetLastPostTime","auth","console","log","username","feedData","SetFeedData","receivedData","SetReceivedData","data","got_data","api_url","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","_c","$RefreshReg$"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/FeedContent.js"],"sourcesContent":["import useLoad from \"./UseLoad\";\nimport FeedPost from \"./FeedPost\";\nimport \"./styles/FeedContent.css\"\nimport { AuthContext } from \"./context/AuthProvider\";\nimport { useContext, useState } from \"react\";\n\nconst FeedContent = (props) => {\n\n    function getPostTime() {\n        if (feed_data.length == 0)\n        {\n            return \"\";\n        }\n        else\n        {\n            return \"&last_post_time=\" + feed_data[feed_data.length-1].created_at;\n        }\n    }\n\n    const [lastPostTime, SetLastPostTime] = useState(null);\n\n    let auth = useContext(AuthContext);\n\n    console.log(auth?.username)\n    const [feedData, SetFeedData] = useState([]);\n    const [receivedData, SetReceivedData] = useState(false);\n\n    const [data, got_data] = useLoad(props.api_url + getPostTime());\n    SetFeedData(data);\n    SetReceivedData(got_data);\n\n    if (receivedData == \"Pending\") {\n        return (\n            <>\n                <div className=\"loading-block\">\n                    <h2> Loading data... </h2>\n                </div>\n            </>\n        );\n    }\n\n    if (receivedData == \"Fail\")\n    {\n        return (\n            <>\n                <div className=\"loading-block\">\n                    <h2> Failed to fetch data </h2>\n                </div>\n            </>\n        );\n    }\n\n    return ( \n        <>\n            <div className=\"feed-content\"> \n                <div className=\"feed-box\">\n                    {\n                        feed_data.map((item) => (\n                            <FeedPost item={item} key={item.id}></FeedPost>\n                        ))\n                    }\n                </div>\n            </div>\n        </>\n     );\n}\n \nexport default FeedContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}