{"ast":null,"code":"var _jsxFileName = \"/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/CommentFormComponent.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { AuthContext } from \"./context/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentFormComponent = params => {\n  _s();\n  const [auth, setAuth] = useContext(AuthContext);\n  const [commentText, setCommentText] = useState(\"\");\n  const [commentImages, setCommentImages] = useState(null);\n  const [dataSendStatus, setDataSendStatus] = useState(null);\n  function PostNewComment(event) {\n    const postData = async () => {\n      const formData = new FormData();\n      formData.append(\"author\", auth[\"user\"][\"id\"]);\n      formData.append(\"post\", params.post_id);\n      formData.append(\"content\", commentText);\n      commentImages.forEach((image, index) => {\n        formData.append(`image_${index}`, image.file);\n      });\n      try {\n        console.log(params.api_url + \"new_comment\");\n        const response = await axios.post(params.api_url + \"new_comment\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(\"Успешно:\", response.data);\n      } catch (error) {\n        console.error(\"Ошибка при отправке:\", error);\n        setDataSendStatus(\"fail\");\n      }\n    };\n    event.preventDefault();\n    try {\n      if (auth !== null && auth !== void 0 && auth.user) {\n        postData();\n      }\n    } catch (e) {\n      console.log(e);\n      setDataSendStatus(\"fail\");\n    }\n    return 0;\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"comment-form-box\",\n    onSubmit: PostNewComment,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"comment-content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      id: \"comment-box\",\n      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435, \\u0447\\u0442\\u043E \\u0434\\u0443\\u043C\\u0430\\u0435\\u0442\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddImagesComponent, {\n      images: commentImages,\n      setImages: setCommentImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" \\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentFormComponent, \"v3aofvlErREVCtOgE8H0/L/cSYQ=\");\n_c = CommentFormComponent;\nexport default CommentFormComponent;\nvar _c;\n$RefreshReg$(_c, \"CommentFormComponent\");","map":{"version":3,"names":["useContext","useState","AuthContext","jsxDEV","_jsxDEV","CommentFormComponent","params","_s","auth","setAuth","commentText","setCommentText","commentImages","setCommentImages","dataSendStatus","setDataSendStatus","PostNewComment","event","postData","formData","FormData","append","post_id","forEach","image","index","file","console","log","api_url","response","axios","post","headers","data","error","preventDefault","user","e","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","AddImagesComponent","images","setImages","_c","$RefreshReg$"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/CommentFormComponent.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { AuthContext } from \"./context/AuthProvider\";\n\nconst CommentFormComponent = (params) => {\n\n    const [auth, setAuth] = useContext(AuthContext);\n    const [commentText, setCommentText] = useState(\"\");\n    const [commentImages, setCommentImages] = useState(null);\n    const [dataSendStatus, setDataSendStatus] = useState(null);\n\n    function PostNewComment(event) {\n        const postData = async () => {\n            const formData = new FormData();\n\n            formData.append(\"author\", auth[\"user\"][\"id\"]);\n            formData.append(\"post\", params.post_id);\n            formData.append(\"content\", commentText);\n    \n            commentImages.forEach((image, index) => {\n                formData.append(`image_${index}`, image.file);\n            });\n    \n            try {\n                console.log(params.api_url + \"new_comment\")\n                const response = await axios.post(params.api_url + \"new_comment\", formData, {\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\"\n                    }\n                });\n    \n                console.log(\"Успешно:\", response.data);\n\n            } catch (error) {\n                console.error(\"Ошибка при отправке:\", error);\n                setDataSendStatus(\"fail\")\n            }\n        }\n        event.preventDefault()\n        try\n        {\n            if (auth?.user)\n            {\n                postData()\n            }\n        }\n        catch (e)\n        {\n            console.log(e);\n            setDataSendStatus(\"fail\")\n        }\n        return 0;\n    }\n\n    return ( \n        <form className=\"comment-form-box\" onSubmit={PostNewComment}>\n            <label htmlFor=\"comment-content\"></label>\n            <textarea type=\"text\" id=\"comment-box\" placeholder=\"Напишите, что думаете\"></textarea>\n            <AddImagesComponent images={commentImages} setImages={setCommentImages}></AddImagesComponent>\n            <button> Ответить </button>\n        </form>\n     );\n}\n \nexport default CommentFormComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}