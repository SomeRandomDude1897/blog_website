{"ast":null,"code":"import{useContext,useState}from\"react\";import\"./styles/NewPost.css\";import axios from\"axios\";import{AuthContext}from\"./context/AuthProvider\";import AddImagesComponent from\"./AddImagesComponent\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NewPostComponent=props=>{const{auth,setAuth}=useContext(AuthContext);const[postName,setPostName]=useState(\"\");const[postContent,setPostContent]=useState(\"\");const[images,setImages]=useState([]);const[sentDataToServer,setDataSendStatus]=useState(\"\");function PostNewPost(event){const postData=async()=>{const formData=new FormData();// Добавляем данные поста\nformData.append(\"author\",auth[\"user\"][\"id\"]);formData.append(\"postname\",postName);formData.append(\"content\",postContent);// Добавляем изображения\nimages.forEach((image,index)=>{formData.append(`image_${index}`,image.file);});try{const response=await axios.post(props.api_url+\"new_post\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});setImages([]);setPostName(\"\");setPostContent(\"\");setDataSendStatus(\"success\");}catch(error){console.error(\"Ошибка при отправке:\",error);setDataSendStatus(\"fail\");}};event.preventDefault();try{if(auth!==null&&auth!==void 0&&auth.user){postData();}}catch(e){console.log(e);setDataSendStatus(\"fail\");}return 0;}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"new-post-box\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"new-post-form\",onSubmit:PostNewPost,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"PostNameInput\",children:\" \\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"PostNameInput\",placeholder:\"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",onChange:e=>{setPostName(e.target.value);},value:postName,required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"PostContentInput\",children:\" \\u0422\\u0435\\u043A\\u0441\\u0442: \"}),/*#__PURE__*/_jsx(\"textarea\",{type:\"text\",id:\"PostContentInput\",placeholder:\"\\u043E \\u0447\\u0435\\u043C \\u0440\\u0430\\u0441\\u0441\\u043A\\u0430\\u0436\\u0435\\u0442\\u0435?\",onChange:e=>{setPostContent(e.target.value);},value:postContent,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(AddImagesComponent,{max_images:10,images:images,setImages:setImages}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{children:\"\\u0417\\u0430\\u043F\\u043E\\u0441\\u0442\\u0438\\u0442\\u044C\"})]})})});};export default NewPostComponent;","map":{"version":3,"names":["useContext","useState","axios","AuthContext","AddImagesComponent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NewPostComponent","props","auth","setAuth","postName","setPostName","postContent","setPostContent","images","setImages","sentDataToServer","setDataSendStatus","PostNewPost","event","postData","formData","FormData","append","forEach","image","index","file","response","post","api_url","headers","error","console","preventDefault","user","e","log","children","className","onSubmit","htmlFor","type","id","placeholder","onChange","target","value","required","max_images"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/NewPostComponent.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport \"./styles/NewPost.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"./context/AuthProvider\";\n\nimport AddImagesComponent from \"./AddImagesComponent\";\n\nconst NewPostComponent = (props) => {\n  const { auth, setAuth } = useContext(AuthContext);\n\n  const [postName, setPostName] = useState(\"\");\n  const [postContent, setPostContent] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [sentDataToServer, setDataSendStatus] = useState(\"\");\n\n  function PostNewPost(event) {\n    const postData = async () => {\n      const formData = new FormData();\n\n      // Добавляем данные поста\n      formData.append(\"author\", auth[\"user\"][\"id\"]);\n      formData.append(\"postname\", postName);\n      formData.append(\"content\", postContent);\n\n      // Добавляем изображения\n      images.forEach((image, index) => {\n        formData.append(`image_${index}`, image.file);\n      });\n\n      try {\n        const response = await axios.post(\n          props.api_url + \"new_post\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n        setImages([]);\n        setPostName(\"\");\n        setPostContent(\"\");\n        setDataSendStatus(\"success\");\n      } catch (error) {\n        console.error(\"Ошибка при отправке:\", error);\n        setDataSendStatus(\"fail\");\n      }\n    };\n    event.preventDefault();\n    try {\n      if (auth?.user) {\n        postData();\n      }\n    } catch (e) {\n      console.log(e);\n      setDataSendStatus(\"fail\");\n    }\n    return 0;\n  }\n\n  return (\n    <>\n      <div className=\"new-post-box\">\n        <form className=\"new-post-form\" onSubmit={PostNewPost}>\n          <label htmlFor=\"PostNameInput\"> Название: </label>\n          <input\n            type=\"text\"\n            id=\"PostNameInput\"\n            placeholder=\"введите название поста\"\n            onChange={(e) => {\n              setPostName(e.target.value);\n            }}\n            value={postName}\n            required\n          />\n          <label htmlFor=\"PostContentInput\"> Текст: </label>\n          <textarea\n            type=\"text\"\n            id=\"PostContentInput\"\n            placeholder=\"о чем расскажете?\"\n            onChange={(e) => {\n              setPostContent(e.target.value);\n            }}\n            value={postContent}\n            required\n          ></textarea>\n          <br />\n          <AddImagesComponent\n            max_images={10}\n            images={images}\n            setImages={setImages}\n          ></AddImagesComponent>\n          <br />\n          <br />\n          <br />\n          <button>Запостить</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default NewPostComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}