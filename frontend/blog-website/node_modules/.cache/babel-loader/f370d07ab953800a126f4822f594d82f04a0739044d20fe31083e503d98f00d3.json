{"ast":null,"code":"var _jsxFileName = \"/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/NewPostComponent.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport \"./styles/NewPost.css\";\nimport axios from 'axios';\nimport { AuthContext } from \"./context/AuthProvider\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewPostComponent = params => {\n  _s();\n  const {\n    auth,\n    setAuth\n  } = useContext(AuthContext);\n  const [postName, setPostName] = useState(\"\");\n  const [postContent, setPostContent] = useState(\"\");\n  const [currentPicture, setCurrentPicture] = useState(null);\n  const [images, setImages] = useState([]);\n  const [sentDataToServer, setDataSendStatus] = useState(\"\");\n  function PostNewPost(event) {\n    const postData = async () => {\n      console.log({\n        \"user_data\": {\n          \"author\": auth.id,\n          \"postname\": postName,\n          \"content\": postContent\n        },\n        \"user_images\": images\n      });\n      axios.post(params.api_url + \"/new_post\", {\n        \"user_data\": {\n          \"author\": auth.id,\n          \"postname\": postName,\n          \"content\": postContent\n        },\n        \"user_images\": images\n      });\n      setImages([]);\n      setCurrentPicture(null);\n      setPostName(\"\");\n      setPostContent(\"\");\n    };\n    event.preventDefault();\n    try {\n      postData();\n    } catch (e) {\n      console.log(e);\n      sentDataToServer(\"fail\");\n    }\n    return 0;\n  }\n  function AddPicture(event) {\n    event.preventDefault();\n    setImages(images.concat(currentPicture));\n    console.log(images);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-post-box\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new-post-form\",\n        onSubmit: PostNewPost,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"PostNameInput\",\n          children: \" \\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"PostNameInput\",\n          placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\",\n          onChange: e => {\n            setPostName(e.target.value);\n          },\n          value: postName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"PostContentInput\",\n          children: \" \\u0422\\u0435\\u043A\\u0441\\u0442: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          id: \"PostContentInput\",\n          placeholder: \"\\u043E \\u0447\\u0435\\u043C \\u0440\\u0430\\u0441\\u0441\\u043A\\u0430\\u0436\\u0435\\u0442\\u0435?\",\n          onChange: e => {\n            setPostContent(e.target.value);\n          },\n          value: postContent,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"PostFileInput\",\n          children: \" \\u041F\\u0440\\u0438\\u043A\\u0440\\u0435\\u043F\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0438 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"PostFileInput\",\n          accept: \"image/*\",\n          type: \"file\",\n          multiple: true,\n          onChange: e => setCurrentPicture(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: AddPicture,\n          children: \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), images.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u0417\\u0430\\u043F\\u043E\\u0441\\u0442\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(NewPostComponent, \"Fs0YXJO+Xmcq9ze1NMqjM7gFENY=\");\n_c = NewPostComponent;\nexport default NewPostComponent;\nvar _c;\n$RefreshReg$(_c, \"NewPostComponent\");","map":{"version":3,"names":["useContext","useState","axios","AuthContext","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPostComponent","params","_s","auth","setAuth","postName","setPostName","postContent","setPostContent","currentPicture","setCurrentPicture","images","setImages","sentDataToServer","setDataSendStatus","PostNewPost","event","postData","console","log","id","post","api_url","preventDefault","e","AddPicture","concat","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","required","accept","multiple","files","onClick","map","item","_c","$RefreshReg$"],"sources":["/media/starrynight/main_pt/projects_linux/blog_website/frontend/blog-website/src/NewPostComponent.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport \"./styles/NewPost.css\"\nimport axios from 'axios';\nimport { AuthContext } from \"./context/AuthProvider\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst NewPostComponent = (params) => {\n    const {auth, setAuth} = useContext(AuthContext);\n\n    const [postName, setPostName] = useState(\"\");\n    const [postContent, setPostContent] = useState(\"\");\n    const [currentPicture, setCurrentPicture] = useState(null);\n    const [images, setImages] = useState([]);\n    const [sentDataToServer, setDataSendStatus] = useState(\"\")\n\n    function PostNewPost(event) {\n        const postData = async () => {\n            console.log({\n                \"user_data\": {\n                    \"author\": auth.id,\n                    \"postname\": postName,\n                    \"content\": postContent\n                },\n                \"user_images\": images\n            })\n            axios.post(params.api_url + \"/new_post\", {\n                \"user_data\": {\n                    \"author\": auth.id,\n                    \"postname\": postName,\n                    \"content\": postContent\n                },\n                \"user_images\": images\n            })\n            setImages([]);\n            setCurrentPicture(null);\n            setPostName(\"\");\n            setPostContent(\"\");\n        }\n        event.preventDefault()\n        try\n        {\n            postData()\n        }\n        catch (e)\n        {\n            console.log(e);\n            sentDataToServer(\"fail\")\n        }\n        return 0;\n    }\n\n    function AddPicture(event) {\n        event.preventDefault()\n        setImages(images.concat(currentPicture))\n        console.log(images);\n    }\n\n\n    return ( \n        <>\n            <div className=\"new-post-box\">\n                <form className=\"new-post-form\" onSubmit={PostNewPost}>\n                    <label htmlFor=\"PostNameInput\"> Название: </label>\n                    <input type=\"text\" id=\"PostNameInput\" placeholder=\"введите название поста\" onChange={(e) => {setPostName(e.target.value)}} value={postName} required/>\n                    <label htmlFor=\"PostContentInput\"> Текст: </label>\n                    <textarea type=\"text\" id=\"PostContentInput\" placeholder=\"о чем расскажете?\" onChange={(e) => {setPostContent(e.target.value)}} value={postContent} required></textarea>\n                    <label htmlFor=\"PostFileInput\"> Прикрепите картинки </label>\n                    <input id=\"PostFileInput\" accept=\"image/*\" type=\"file\" multiple onChange={(e) => setCurrentPicture(e.target.files[0])} />\n                    <button onClick={AddPicture}> Добавить картинку</button>\n                    <br/>\n                    {\n                        images.map((item) => {\n                            return (<div key={uuidv4()}>{item}</div>)\n                        })\n                    }\n                    <br/>\n                    <button>Запостить</button>\n                </form>\n            </div>\n        </>\n     );\n}\n \nexport default NewPostComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}